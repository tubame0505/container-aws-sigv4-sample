server {
    listen 8080 default_server;
    listen [::]:8080 default_server;

    # replace with the IP address of your resolver
    resolver 8.8.8.8;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    # proxy API Gateway (/api/{APIGW_ID}/path/to/your/api)
    location /api/ {
        client_body_buffer_size 16k;

        set $api_prefix '^/api/';
        set $apigw_service 'execute-api';
        set $proxy_uri '';
        access_by_lua_block {
            -- AWS V4 Signature
            ngx.req.read_body()
            local body_data = ngx.req.get_body_data() or ""
            local target_uri = string.gsub(ngx.var.uri, ngx.var.api_prefix, "")  -- {APIGW_ID}/path/to/your/api
            local apigw_id = string.gsub(target_uri, "/.*", "")  -- {APIGW_ID}
            local apigw_host = apigw_id .. "." .. ngx.var.apigw_service .. "." .. os.getenv('AWS_REGION') .. ".amazonaws.com"  -- {APIGW_ID}.execute-api.ap-northeast-1.amazonaws.com
            local api_uri = string.gsub(target_uri, apigw_id, "")  -- /path/to/your/api
            local auth = require("resty.aws-sign").aws_set_headers(tonumber(ngx.time()), apigw_host, api_uri, ngx.var.apigw_service, ngx.var.query_string, ngx.var.request_method, ngx.req.get_body_data())

            -- set Proxy URI
            ngx.var.proxy_uri = "https://" .. apigw_host .. api_uri .. ""
        }
        proxy_pass $proxy_uri$is_args$args;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }
}
